# amanda.conf - Amanda configuration file. See amanda.conf(5) for details

org 	 "<%= name %>"	# your organization name for reports
mailto 	 "<%= amandabackup %>"	# space separated list of operators at your site
dumpuser "<%= amandabackup %>"	# the user to run dumps under

inparallel 4		# maximum dumpers that will run in parallel (max 63)
			# this maximum can be increased at compile-time,
			# modifying MAX_DUMPERS in server-src/driverio.h
dumporder "sssS"	# specify the priority order of each dumper

taperalgo first		# The algorithm used to choose which dump image to send
			# to the taper.

displayunit "k"		# The unit used to print many numbers.
			# k=kilo, m=mega, g=giga, t=tera
			
netusage  600 Kbps	# maximum net bandwidth for Amanda, in KB per sec

dumpcycle 4 weeks	# the number of days in the normal dump cycle
runspercycle 20         # the number of amdump runs in dumpcycle days
			# (4 weeks * 5 amdump runs per week -- just weekdays)
tapecycle 25 tapes	# the number of tapes in rotation

bumpsize 20 Mb		# minimum savings (threshold) to bump level 1 -> 2
bumppercent 20		# minimum savings (threshold) to bump level 1 -> 2
bumpdays 1		# minimum days at each level
bumpmult 4		# threshold = bumpsize * bumpmult^(level-1)

etimeout 300		# number of seconds per filesystem for estimates.
dtimeout 1800		# number of idle seconds before a dump is aborted.
ctimeout 30		# maximum number of seconds that amcheck waits
			# for each client host
 
tapebufs 20             # A positive integer telling taper how many 
                        # 32k buffers to allocate.  The default is 20 (640k).

# By default, Amanda can only track at most one run per calendar day. When
# the usetimestamps option is enabled, however, Amanda can track as many
# runs as you care to make.
# WARNING: This option is not backward-compatible. Do not enable it if you
#          intend to downgrade your server installation to Amanda community 
#          edition 2.5
usetimestamps yes

######################################
# Specify tape device and/or tape changer
#

runtapes 1			# number of tapes to be used in a single run of amdump
tpchanger "chg-manual"		# the tape-changer glue script
tapedev "file:<%= File.join(space, '/vtapes/tape') %>"	# the no-rewind tape device to be used
rawtapedev "/dev/null"	# the raw device to be used (ftape only)
#changerfile "/etc/amanda/<%= name %>/changer"
#changerfile "/etc/amanda/<%= name %>/changer-status"
changerfile "/etc/amanda/<%= name %>/changer.conf"
changerdev "/dev/null"

# If you want Amanda to automatically label any non-Amanda tapes it
# encounters, uncomment the line below. Note that this will ERASE any
# non-Amanda tapes you may have, and may also ERASE any near-failing tapes.
# Use with caution.
## label_new_tapes "<%= name %>-%%%"

maxdumpsize -1		# Maximum number of bytes the planner will schedule
			# for a run (default: runtapes * tape_length).
tapetype HP-DAT		# what kind of tape it is (see tapetypes below)
labelstr "^<%= name %>-[0-9][0-9]*$"	# label constraint regex: all tapes must match

amrecover_do_fsf yes		# amrecover will call amrestore with the
				# -f flag for faster positioning of the tape.
amrecover_check_label yes	# amrecover will call amrestore with the
				# -l flag to check the label.
amrecover_changer "/dev/null"	# amrecover will use the changer if you restore
				# from this device.
				# It could be a string like 'changer' and
				# amrecover will use your changer if you
				# set your tape with 'settape changer'

######################################
# Specify holding disks. 
#

holdingdisk hd1 {
    comment "main holding disk"
    directory "<%= holdingdisk %>"	# where the holding disk is
    use -100 Mb			# how much space can we use on it
				# a non-positive value means:
				# use all space but that value
    chunksize 1Gb 	# size of chunk if you want big dump to be
			# dumped on multiple files on holding disks
			#  N Kb/Mb/Gb split images in chunks of size N
			#	      The maximum value should be
			#	      (MAX_FILE_SIZE - 1Mb)
			#  0          same as INT_MAX bytes
    }

autoflush no #
# if autoflush is set to yes, then amdump will schedule all dump on
# holding disks to be flush to tape during the run.

# Amanda needs a few Mb of diskspace for the log and debug files,
# as well as a database.  This stuff can grow large, so the conf directory
# isn't usually appropriate.  Some sites use /usr/local/var and some /usr/adm.
# Create an amanda directory under there.  You need a separate infofile and
# logdir for each configuration, so create subdirectories for each conf and
# put the files there.  Specify the locations below.

# Note that, although the keyword below is infofile, it is only so for
# historic reasons, since now it is supposed to be a directory (unless
# you have selected some database format other than the `text' default)
infofile "<%= infofile %>"	# database DIRECTORY
logdir   "<%= logdir %>"		# log directory
indexdir "<%= indexdir %>"		# index directory
tapelist "<%= tapelist %>"	# list of used tapes
# tapelist is stored, by default, in the directory that contains amanda.conf

######################################
# dumptypes
#

define dumptype global {
    comment "Global definitions"
}

# Dumptypes for gnutar
define dumptype root-tar {
    global
    program "GNUTAR"
    comment "root partitions dumped with tar"
    compress none
    index
#   exclude list "/etc/amanda/exclude.gtar"
    priority low
}

define dumptype user-tar {
    root-tar
    comment "user partitions dumped with tar"
    priority medium
}

define dumptype comp-root-tar {
    root-tar
    comment "Root partitions with compression"
    compress client fast
}

define dumptype comp-user-tar {
    user-tar
    compress client fast
}

define dumptype comp-user {
    global
    comment "Non-root partitions on reasonably fast machines"
    compress client fast
    priority medium
}

define dumptype comp-root {
    global
    comment "Root partitions with compression"
    compress client fast
    priority low
}

define dumptype nocomp-root {
    comp-root
    comment "Root partitions without compression"
    compress none
}

define dumptype comp-high {
    global
    comment "very important partitions on fast machines"
    compress client best
    priority high
}

define dumptype server-encrypt-fast {
   global
   program "GNUTAR"
   comment "fast client compression and server symmetric encryption"
   compress client fast
   encrypt server
   server_encrypt "/usr/sbin/amcrypt"
   server_decrypt_option "-d"
}

define dumptype client-encrypt-nocomp {
   global
   program "GNUTAR"
   comment "no compression and client symmetric encryption"
   compress none
   encrypt client
   client_encrypt "/usr/sbin/amcrypt"
   client_decrypt_option "-d"
}

######################################
# network interfaces
#

define interface local {
    comment "a local disk"
    use 1000 kbps
}

define interface le0 {
    comment "10 Mbps ethernet"
    use 400 kbps
}

